import 'package:novel_log/models/data_models/user_profile_model.dart';
import 'package:novel_log/utility/firebase_services/database_services/firebase_database_services.dart';

class UserServices {
  //creating user data on server data based on userid generated by firebaseAuth
  //when signing up user
  static Future<void> createUser(String userId, Map<String, dynamic> data) async {
    await FirebaseDatabaseServices.userCollectionReference.doc(userId).set(data);
  }

  static Future<void> changeTotalNovelCountOfUser(String userId, int totalNovelCount) async {
    await FirebaseDatabaseServices.userCollectionReference.doc(userId).update({'total_started_novel_count': totalNovelCount});
  }

  static Future<void> changeTotalChapterReadCountOfUser(String userId, int totalChapterReadCount) async {
    await FirebaseDatabaseServices.userCollectionReference.doc(userId).update({'total_chapter_read_count': totalChapterReadCount});
  }

  static Future<void> changeCompleteNovelCountOfUser(String userId, int completeNovelCount) async {
    await FirebaseDatabaseServices.userCollectionReference.doc(userId).update({'total_novel_read_complete_with_novel_complete': completeNovelCount});
  }

  static Future<void> changeHiatusNovelCountOfUser(String userId, int hiatusNovelCount) async {
    await FirebaseDatabaseServices.userCollectionReference.doc(userId).update({'total_novel_read_complete_with_novel_hiatus': hiatusNovelCount});
  }

  //getting user data by userid given by firebaseAuth when signing in user
  static Future<UserProfileModel> getUserData(String userId) async {
    final temp = await FirebaseDatabaseServices.userCollectionReference.doc(userId).get();
    return UserProfileModel.fromJson(userId, temp.data() ?? {});
  }

//end of file
}
