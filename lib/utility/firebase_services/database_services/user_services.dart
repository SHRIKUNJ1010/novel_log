import 'package:novel_log/models/data_models/user_profile_model.dart';
import 'package:novel_log/utility/constants.dart';
import 'package:novel_log/utility/firebase_services/database_services/firebase_database_services.dart';

class UserServices {
  //creating user data on server data based on userid generated by firebaseAuth
  //when signing up user
  static Future<void> createUser(String userId, Map<String, dynamic> data) async {
    await FirebaseDatabaseServices.userCollectionReference.doc(userId).set(data);
  }

  static Future<void> changeTotalNovelCountOfUser(String userId, int totalNovelCount) async {
    await FirebaseDatabaseServices.userCollectionReference.doc(userId).update({totalStartedNovelCountKeyName: totalNovelCount});
  }

  static Future<void> changeTotalChapterReadCountOfUser(String userId, int totalChapterReadCount) async {
    await FirebaseDatabaseServices.userCollectionReference.doc(userId).update({todayChapterReadCountKeyName: totalChapterReadCount});
  }

  static Future<void> changeCompleteNovelCountOfUser(String userId, int completeNovelCount) async {
    await FirebaseDatabaseServices.userCollectionReference.doc(userId).update({totalNovelReadCompleteWithNovelCompleteKeyName: completeNovelCount});
  }

  static Future<void> changeHiatusNovelCountOfUser(String userId, int hiatusNovelCount) async {
    await FirebaseDatabaseServices.userCollectionReference.doc(userId).update({totalNovelReadCompleteWithNovelHiatusKeyName: hiatusNovelCount});
  }

  /*static Future<void> changeUserHiddenPin(String userId, String oldUserPin, String newUserPin) async {
    final temp = await FirebaseDatabaseServices.userCollectionReference.doc(userId).get();
    final tempUser = UserProfileModel.fromJson(userId, temp.data() ?? {});
    final isMatched = Password.verify(oldUserPin, tempUser.userHiddenPin);
    if (isMatched) {
      final hashString = Password.hash(newUserPin, PBKDF2());
      await FirebaseDatabaseServices.userCollectionReference.doc(userId).update({'user_hidden_pin': hashString});
    }
  }*/

  /*static Future<void> createUserHiddenPin(String userId, String userPin) async {
    final hashString = Password.hash(userPin, PBKDF2());
    final temp = await FirebaseDatabaseServices.userCollectionReference.doc(userId).update({'user_hidden_pin': hashString});
  }*/

  static Future<String> getUserPinHash(String userId) async {
    final temp = await FirebaseDatabaseServices.userCollectionReference.doc(userId).get();
    final tempUser = UserProfileModel.fromJson(userId, temp.data() ?? {});
    return tempUser.userHiddenPin ?? '';
  }

  //getting user data by userid given by firebaseAuth when signing in user
  static Future<UserProfileModel> getUserData(String userId) async {
    final temp = await FirebaseDatabaseServices.userCollectionReference.doc(userId).get();
    return UserProfileModel.fromJson(userId, temp.data() ?? {});
  }

//end of file
}
